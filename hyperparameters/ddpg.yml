PandaReach-v4:
  n_timesteps: !!float 5e5
  policy: 'MultiInputPolicy'
  gamma: 0.9
  batch_size: 256
  buffer_size: 1000000
  learning_starts: 256
  tau: 0.08
  noise_type: 'normal'
  noise_std: 0.2
  gradient_steps: -1
  train_freq: [64, "episode"]
  learning_rate: !!float 1e-3
  policy_kwargs: "dict(net_arch=[400, 300])"

PandaReachDense-v4:
  n_timesteps: !!float 5e5
  policy: 'MultiInputPolicy'
  gamma: 0.9
  batch_size: 256
  buffer_size: 1000000
  learning_starts: 256
  tau: 0.08
  noise_type: 'normal'
  noise_std: 0.2
  gradient_steps: -1
  train_freq: [64, "episode"]
  learning_rate: !!float 1e-3
  policy_kwargs: "dict(net_arch=[400, 300])"

PandaGrasp-v3:
  n_timesteps: !!float 2e6
  policy: 'MultiInputPolicy'
  gamma: 0.9
  batch_size: 256
  buffer_size: 1000000
  learning_starts: 256
  tau: 0.08
  noise_type: 'normal'
  noise_std: 0.2
  gradient_steps: -1
  train_freq: [64, "episode"]
  learning_rate: !!float 1e-3
  policy_kwargs: "dict(net_arch=[400, 300])"

PandaGraspDense-v3:
  n_timesteps: !!float 2e6
  policy: 'MultiInputPolicy'
  gamma: 0.9
  batch_size: 256
  buffer_size: 1000000
  learning_starts: 256
  tau: 0.08
  noise_type: 'normal'
  noise_std: 0.2
  gradient_steps: -1
  train_freq: [64, "episode"]
  learning_rate: !!float 1e-3
  policy_kwargs: "dict(net_arch=[400, 300])"

PandaPickAndPlace-v3:
  n_timesteps: !!float 2e6
  policy: 'MultiInputPolicy'
  gamma: 0.9
  batch_size: 256
  buffer_size: 1000000
  learning_starts: 256
  tau: 0.08
  noise_type: 'normal'
  noise_std: 0.2
  gradient_steps: -1
  train_freq: [64, "episode"]
  learning_rate: !!float 1e-3
  policy_kwargs: "dict(net_arch=[400, 300])"

PandaPickAndPlaceDense-v3:
  n_timesteps: !!float 2e6
  policy: 'MultiInputPolicy'
  gamma: 0.9
  batch_size: 256
  buffer_size: 1000000
  learning_starts: 256
  tau: 0.08
  noise_type: 'normal'
  noise_std: 0.2
  gradient_steps: -1
  train_freq: [64, "episode"]
  learning_rate: !!float 1e-3
  policy_kwargs: "dict(net_arch=[400, 300])"